{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","activePage","onPageChange","toNextPage","toPrevPage","pageQuantity","Math","ceil","startInfoItem","endInfoItem","pageArr","Array","from","length","_","i","hidePage","page","className","type","disabled","onClick","map","classNames","hidden","App","state","onPerPageChange","event","setState","target","value","prevState","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAaaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAeC,KAAKC,KAAKR,EAAQC,GACjCQ,EAAgBR,GAAWC,EAAa,GAAK,EAC7CQ,EAAcJ,IAAiBJ,EACjCF,EACAE,EAAaD,EACXU,EAAUC,MAAMC,KAAK,CAAEC,OAAQR,IAAgB,SAACS,EAAGC,GAAJ,OAAUA,EAAI,KAE7DC,EAAW,SAACC,GAChB,OAAiB,IAATA,GAAcA,IAAShB,GAC1BgB,IAAShB,EAAa,GAAKgB,IAAShB,EAAa,GACjDgB,EAAOZ,GAGd,OACE,sBAAK,aAAW,0BAAhB,UACE,uCAAQG,EAAR,cAA2BC,EAA3B,eAA6CV,KAE7C,qBAAImB,UAAU,aAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,SAAyB,IAAfnB,EACVoB,QAASjB,EAJX,oBAUDM,EAAQY,KAAI,SAAAL,GAAI,OACf,sCACIA,IAAShB,EAAa,GAAKgB,IAAShB,EAAa,IACjD,oBAEEiB,UAAU,mBAFZ,SAIE,wBACEC,KAAK,SACLD,UAAWK,IACT,0BACA,iCAEFC,OACEP,IAAShB,EAAa,EAClBA,EAAa,EACbA,GAAcI,EAAe,EATrC,kBAJF,eACeY,IAoBjB,oBAEEC,UAAU,mBAFZ,SAIE,wBACEC,KAAK,SACLD,UAAWK,IACT,0BACA,CAAE,kCAAmCN,IAAShB,IAEhDuB,OAAQR,EAASC,GACjBI,QAAS,kBAAMnB,EAAae,IAP9B,SASGA,KAZEA,SAkBX,oBAAIC,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,SAAUnB,IAAeS,EAAQG,OACjCQ,QAASlB,EAJX,2BCpFJsB,E,4MACJC,MAAe,CACb3B,MAAO,GACPC,QAAS,EACTiB,KAAM,G,EAGRU,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZ7B,SAAU4B,EAAME,OAAOC,MACvBd,KAAM,K,EAIVf,aAAe,SAACe,GACd,EAAKY,SAAS,CAAEZ,U,EAGlBd,WAAa,WACX,EAAK0B,UAAS,SAAAG,GAAS,MAAK,CAC1Bf,KAAMe,EAAUf,KAAO,O,EAI3Bb,WAAa,WACX,EAAKyB,UAAS,SAAAG,GAAS,MAAK,CAC1Bf,KAAMe,EAAUf,KAAO,O,4CAI3B,WACE,MAIIgB,KAAKP,MAHP3B,EADF,EACEA,MACAC,EAFF,EAEEA,QACAiB,EAHF,EAGEA,KAGF,OACE,qCACE,4CAEA,8BACE,wBAAOiB,QAAQ,UAAf,+BAEE,yBACEC,GAAG,UACHJ,MAAO/B,EACPoC,SAAUH,KAAKN,gBAHjB,UAKE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAKN,cAAC,EAAD,CACEhC,MAAOA,EACPC,QAASA,EACTC,WAAYgB,EACZf,aAAc+B,KAAK/B,aACnBC,WAAY8B,KAAK9B,WACjBC,WAAY6B,KAAK7B,oB,GA/DTiC,IAAMC,WAsETb,IC7Efc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1db271a9.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  activePage: number,\n  onPageChange: (page: number) => void,\n  toNextPage: () => void,\n  toPrevPage: () => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  activePage,\n  onPageChange,\n  toNextPage,\n  toPrevPage,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const startInfoItem = perPage * (activePage - 1) + 1;\n  const endInfoItem = pageQuantity === activePage\n    ? total\n    : activePage * perPage;\n  const pageArr = Array.from({ length: pageQuantity }, (_, i) => i + 1);\n\n  const hidePage = (page: number) => {\n    return (page !== 1 && page !== activePage\n      && page !== activePage + 1 && page !== activePage - 1\n      && page < pageQuantity);\n  };\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <h3>{`${startInfoItem} - ${endInfoItem} of ${total}`}</h3>\n\n      <ul className=\"pagination\">\n        <li className=\"pagination__page\">\n          <button\n            type=\"button\"\n            className=\"pagination__page-button\"\n            disabled={activePage === 1}\n            onClick={toPrevPage}\n          >\n            &laquo;\n          </button>\n        </li>\n\n        {pageArr.map(page => (\n          <>\n            {(page === activePage + 2 || page === activePage - 2) && (\n              <li\n                key={`dots-${page}`}\n                className=\"pagination__page\"\n              >\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'pagination__page-button',\n                    'pagination__page-button--dots',\n                  )}\n                  hidden={\n                    page === activePage - 2\n                      ? activePage < 4\n                      : activePage >= pageQuantity - 2\n                  }\n                >\n                  ...\n                </button>\n              </li>\n            )}\n\n            <li\n              key={page}\n              className=\"pagination__page\"\n            >\n              <button\n                type=\"button\"\n                className={classNames(\n                  'pagination__page-button',\n                  { 'pagination__page-button--active': page === activePage },\n                )}\n                hidden={hidePage(page)}\n                onClick={() => onPageChange(page)}\n              >\n                {page}\n              </button>\n            </li>\n          </>\n        ))}\n\n        <li className=\"pagination__page\">\n          <button\n            type=\"button\"\n            className=\"pagination__page-button\"\n            disabled={activePage === pageArr.length}\n            onClick={toNextPage}\n          >\n            &raquo;\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\ntype State = {\n  total: number,\n  perPage: number,\n  page: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  onPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      perPage: +event.target.value,\n      page: 1,\n    });\n  };\n\n  onPageChange = (page: number) => {\n    this.setState({ page });\n  };\n\n  toNextPage = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  toPrevPage = () => {\n    this.setState(prevState => ({\n      page: prevState.page - 1,\n    }));\n  };\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n    } = this.state;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n\n        <div>\n          <label htmlFor=\"perPage\">\n            Items per page&nbsp;\n            <select\n              id=\"perPage\"\n              value={perPage}\n              onChange={this.onPerPageChange}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </label>\n        </div>\n\n        <Pagination\n          total={total}\n          perPage={perPage}\n          activePage={page}\n          onPageChange={this.onPageChange}\n          toNextPage={this.toNextPage}\n          toPrevPage={this.toPrevPage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}